import requests
from requests_oauthlib import OAuth1Session

# --- –ó–∞–ø–æ–ª–Ω–∏ —Å–≤–æ–∏–º–∏ –∫–ª—é—á–∞–º–∏ ---
API_KEY = "YOUR_API_KEY"
API_SECRET = "YOUR_API_SECRET"
ACCESS_TOKEN = "YOUR_ACCESS_TOKEN"
ACCESS_TOKEN_SECRET = "YOUR_ACCESS_TOKEN_SECRET"
BEARER_TOKEN = "YOUR_BEARER_TOKEN"

# —Å–∫–æ–ª—å–∫–æ –Ω–æ–≤—ã—Ö —Ç–≤–∏—Ç–æ–≤ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–∞ –æ–¥–∏–Ω –∑–∞–ø—É—Å–∫
MAX_REPLIES_PER_RUN = 3

def get_user_tweets(user_id, since_id=None, max_results=10):
    """
    –ü–æ–ª—É—á–∏—Ç—å —Ç–≤–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
    """
    url = f"https://api.x.com/2/users/{user_id}/tweets"
    headers = {"Authorization": f"Bearer {BEARER_TOKEN}"}
    params = {"max_results": max_results}
    if since_id:
        params["since_id"] = since_id
    resp = requests.get(url, headers=headers, params=params)
    resp.raise_for_status()
    return resp.json().get("data", [])

def make_oauth_session():
    """
    –°–æ–∑–¥–∞—Ç—å —Å–µ—Å—Å–∏—é –¥–ª—è POST-–∑–∞–ø—Ä–æ—Å–æ–≤ (–ª–∞–π–∫–∏/—Ä–µ–ø–ª–∞–∏)
    """
    return OAuth1Session(
        API_KEY,
        API_SECRET,
        ACCESS_TOKEN,
        ACCESS_TOKEN_SECRET
    )

def like_tweet(auth_session, user_id, tweet_id):
    url = f"https://api.x.com/2/users/{user_id}/likes"
    payload = {"tweet_id": tweet_id}
    resp = auth_session.post(url, json=payload)
    resp.raise_for_status()
    return resp.json()

def reply_to_tweet(auth_session, text, in_reply_to_tweet_id):
    url = "https://api.x.com/2/tweets"
    payload = {
        "text": text,
        "reply": {"in_reply_to_tweet_id": in_reply_to_tweet_id}
    }
    resp = auth_session.post(url, json=payload)
    resp.raise_for_status()
    return resp.json()

def monitor_user(user_id, last_known_id=None, db_interface=None):
    tweets = get_user_tweets(user_id, since_id=last_known_id, max_results=20)
    if not tweets:
        print("–ù–µ—Ç –Ω–æ–≤—ã—Ö —Ç–≤–∏—Ç–æ–≤")
        return

    auth = make_oauth_session()
    replies_done = 0

    for tweet in tweets:
        tw_id = tweet["id"]
        tw_text = tweet["text"]

        if last_known_id and int(tw_id) > int(last_known_id):
            print(f"üÜï –ù–æ–≤—ã–π —Ç–≤–∏—Ç {tw_id}: {tw_text}")

            # –ª–∞–π–∫–∞–µ–º
            like_tweet(auth, user_id, tw_id)
            print("‚ù§Ô∏è –õ–∞–π–∫ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω")

            # –æ—Ç–≤–µ—á–∞–µ–º —Ç–æ–ª—å–∫–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ —Ä–∞–∑
            if replies_done < MAX_REPLIES_PER_RUN:
                reply_text = "üî• –ö—Ä—É—Ç–æ–π –ø–æ—Å—Ç!"  # —Ç—É—Ç –º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –æ—Ç –º–æ–¥–µ–ª–∏
                reply_to_tweet(auth, reply_text, tw_id)
                print("üí¨ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
                replies_done += 1
        else:
            print("‚ö†Ô∏è –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ –∏–ª–∏ —Ç–≤–∏—Ç—ã —Å—Ç–∞—Ä—ã–µ ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º –±–µ–∑ –æ—Ç–≤–µ—Ç–∞")

    # –æ–±–Ω–æ–≤–ª—è–µ–º last_known_id
    max_id = max(int(t["id"]) for t in tweets)
    if db_interface:
        db_interface.set_last_tweet_id(user_id, str(max_id))

# --- –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ---
class DummyDB:
    def __init__(self):
        self.store = {}
    def get_last_tweet_id(self, user_id):
        return self.store.get(user_id)
    def set_last_tweet_id(self, user_id, tweet_id):
        self.store[user_id] = tweet_id

if __name__ == "__main__":
    user_id = "44196397"  # –Ω–∞–ø—Ä–∏–º–µ—Ä, id –ò–ª–æ–Ω –ú–∞—Å–∫–∞
    db = DummyDB()
    monitor_user(user_id, db.get_last_tweet_id(user_id), db)
